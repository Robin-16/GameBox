/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication9;

import java.awt.Color;
import java.awt.Graphics;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class SAL_AI extends javax.swing.JFrame {
static int xi[],yi[];
static int randno=0,randno1=0;
boolean fsix=false,fsix1=false,flaggers=false,breaker=false,breaker1=false,creditupdate=false,creditreduce=false,users=false,inc=false,dec=false;
static int pre=0,xivalue=696,yivalue=149,pre1=0,xivalue1=696,yivalue1=194;
Graphics g;
sal_cpu_panel p1;
int crval=homescreen.creditvalue;
int checker=0;
    /**
     * Creates new form SAL_AI
     */
    public SAL_AI() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        xi=new int[110];                   //57 blocks, 58:p1 wins, 59:p2 wins, 60:p1 starts, 61:p2 starts
        yi=new int[110];
        init();
        setSize(1366,738);
        p1=new sal_cpu_panel();
        jPanel11.add(p1);
        //getContentPane().setBackground(Color.BLACK);
    }
    public void init()
    {
       xi[1]=26;  xi[2]=96;  xi[3]=165;  xi[4]=232; xi[5]=300;  xi[6]=365; xi[7]=435;  xi[8]=502; xi[9]=572; xi[10]=641;
       yi[1]=647; yi[2]=647; yi[3]=647; yi[4]=647; yi[5]=650; yi[6]=647; yi[7]=647; yi[8]=647; yi[9]=647; yi[10]=647;
       xi[20]=26;  xi[19]=96;  xi[18]=165;  xi[17]=232; xi[16]=300;  xi[15]=365; xi[14]=435;  xi[13]=502; xi[12]=572; xi[11]=641;
       yi[20]=573; yi[19]=573; yi[18]=573; yi[17]=573; yi[16]=573; yi[15]=573; yi[14]=573; yi[13]=573; yi[12]=573; yi[11]=573;
       xi[21]=26;  xi[22]=96;  xi[23]=165;  xi[24]=232; xi[25]=300;  xi[26]=365; xi[27]=435;  xi[28]=502; xi[29]=572; xi[30]=641;
       yi[21]=506; yi[22]=506; yi[23]=506; yi[24]=506; yi[25]=506; yi[26]=506; yi[27]=506; yi[28]=506; yi[29]=506; yi[30]=506;
       xi[40]=26;  xi[39]=96;  xi[38]=165;  xi[37]=232; xi[36]=300;  xi[35]=365; xi[34]=435;  xi[33]=502; xi[32]=572; xi[31]=641;
       yi[40]=441; yi[39]=441; yi[38]=441; yi[37]=441; yi[36]=441; yi[35]=441; yi[34]=441; yi[33]=441; yi[32]=441; yi[31]=441;
       xi[41]=26;  xi[42]=96;  xi[43]=165;  xi[44]=232; xi[45]=300;  xi[46]=365; xi[47]=435;  xi[48]=502; xi[49]=572; xi[50]=641;
       yi[41]=370; yi[42]=370; yi[43]=370; yi[44]=370; yi[45]=370; yi[46]=370; yi[47]=370; yi[48]=370; yi[49]=370; yi[50]=370;
       xi[60]=26;  xi[59]=96;  xi[58]=165;  xi[57]=232; xi[56]=300;  xi[55]=365; xi[54]=435;  xi[53]=502; xi[52]=572; xi[51]=641;
       yi[60]=301; yi[59]=301; yi[58]=301; yi[57]=301; yi[56]=301; yi[55]=301; yi[54]=301; yi[53]=301; yi[52]=301; yi[51]=301;
       xi[61]=26;  xi[62]=96;  xi[63]=165;  xi[64]=232; xi[65]=300;  xi[66]=365; xi[67]=435;  xi[68]=502; xi[69]=572; xi[70]=641;
       yi[61]=232; yi[62]=232; yi[63]=232; yi[64]=232; yi[65]=232; yi[66]=232; yi[67]=232; yi[68]=232; yi[69]=232; yi[70]=232;
       xi[80]=26;  xi[79]=96;  xi[78]=165;  xi[77]=232; xi[76]=300;  xi[75]=365; xi[74]=435;  xi[73]=502; xi[72]=572; xi[71]=641;
       yi[80]=163; yi[79]=163; yi[78]=163; yi[77]=163; yi[76]=163; yi[75]=163; yi[74]=163; yi[73]=163; yi[72]=163; yi[71]=163;
        xi[81]=26;  xi[82]=96;  xi[83]=165;  xi[84]=232; xi[85]=300;  xi[86]=365; xi[87]=435;  xi[88]=502; xi[89]=572; xi[90]=641;
       yi[81]=94; yi[82]=94; yi[83]=94; yi[84]=94; yi[85]=94; yi[86]=94; yi[87]=94; yi[88]=94; yi[89]=94; yi[90]=94;
       xi[100]=26;  xi[99]=96;  xi[98]=165;  xi[97]=232; xi[96]=300;  xi[95]=365; xi[94]=435;  xi[93]=502; xi[92]=572; xi[91]=641;
       yi[100]=30; yi[99]=30; yi[98]=30; yi[97]=30; yi[96]=30; yi[95]=30; yi[94]=30; yi[93]=30; yi[92]=30; yi[91]=30;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setText("player dice");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(823, 120, 120, 23);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(730, 40, 100, 20);

        jLabel1.setText("p1 status");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(840, 170, 130, 14);

        jLabel2.setText("cpu status");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(840, 220, 130, 14);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(720, 252, 310, 20);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(720, 390, 310, 20);

        jLabel3.setText("start position");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(810, 270, 170, 14);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(790, 70, 180, 20);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(860, 40, 100, 20);

        jLabel5.setText("player outcome");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(740, 20, 120, 14);

        jLabel6.setText("cpu outcome");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(880, 20, 120, 14);

        jButton2.setText("newgame");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(790, 410, 200, 23);

        jButton3.setText("Rules");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(790, 450, 200, 23);

        jPanel11.setPreferredSize(new java.awt.Dimension(750, 750));
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });
        jPanel11.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel11);
        jPanel11.setBounds(0, 0, 730, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       jLabel4.setText("");
       if(breaker==true)
       {
        breaker=false;
      
       }
       else
       {
            try {
                Randominteger ri=new Randominteger();
                 randno=ri.generaterandom();
                 jTextField1.setText(String.valueOf(randno));
                 if(randno==6&&fsix==true)
                 {
                     jLabel4.setText("player 1 gets a re-chance");
                     flaggers=true;
                     breaker1=true;
                 }
                 if(pre==80||pre==94||pre==96||pre==97||pre==99||pre==100)
                   {
                         try {
                             if(pre==100)
                             {
                                 xivalue=xi[100];
                                 yivalue=yi[100];
                                 pre=100;
                                 p1.repaint();
                             }
                            else if(pre==80)
                             {
                                 xivalue=xi[100];
                                 yivalue=yi[100];
                                 pre=100;
                                 p1.repaint();
                                 creditupdate=true;
                                 JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                                 jButton1.setEnabled(false);
                             }
                             else if(pre==94) 
                             {
                                   if(randno==6)
                                 {
                                     xivalue=xi[100];
                                     yivalue=yi[100];
                                    pre=100;
                                    p1.repaint();
                                    creditupdate=true;
                                    JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                                    jButton1.setEnabled(false);
                                 }
                                 else if(randno==5)
                                 {
                                     xivalue=xi[99];
                                     yivalue=yi[99];
                                     pre=99;
                                     p1.repaint();
                                 }
                                 else if(randno==4)
                                 {
                                     xivalue=xi[79];
                                     yivalue=yi[79];
                                     pre=79;
                                     p1.repaint();
                                 }
                                 else if(randno==3)
                                 {
                                     xivalue=xi[97];
                                     yivalue=yi[97];
                                     pre=97;
                                     p1.repaint();
                                 }
                                 else if(randno==2)
                                 {
                                     xivalue=xi[96];
                                     yivalue=yi[96];
                                     pre=96;
                                     p1.repaint();
                                 }
                                  else if(randno==1)
                                 {
                                     xivalue=xi[75];
                                     yivalue=yi[75];
                                     pre=75;
                                     p1.repaint();
                                 }
                                 
                                }
                             else if(pre==96)
                             {
                                 if(randno>4)
                                 {
                                     xivalue=xi[96];
                                     yivalue=yi[96];
                                     pre=96;
                                     p1.repaint();
                                  }
                                 else if(randno==4)
                                 {
                                 xivalue=xi[100];
                                 yivalue=yi[100];
                                 pre=100;
                                 p1.repaint();
                                 creditupdate=true;
                                 JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                                 jButton1.setEnabled(false);
                                 }
                                  else if(randno==3)
                                 {
                                     xivalue=xi[99];
                                     yivalue=yi[99];
                                     pre=99;
                                     p1.repaint();
                                 }
                                 else if(randno==2)
                                 {
                                     xivalue=xi[79];
                                     yivalue=yi[79];
                                     pre=79;
                                     p1.repaint();
                                 }
                                  else if(randno==1)
                                 {
                                     xivalue=xi[97];
                                     yivalue=yi[97];
                                     pre=97;
                                     p1.repaint();
                                 }
                             }
                             else if(pre==97)
                             {
                                 
                                 if(randno>3)
                             {      
                                     xivalue=xi[97];
                                     yivalue=yi[97];
                                     pre=97;
                                     p1.repaint();
                                  
                             }
                                 else if(randno==3)
                                 {
                                     xivalue=xi[100];
                                 yivalue=yi[100];
                                 pre=100;
                                 p1.repaint();
                                 creditupdate=true;
                                 JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                                 jButton1.setEnabled(false);
                                 }
                                 else if(randno==2)
                                 {
                                     xivalue=xi[99];
                                     yivalue=yi[99];
                                     pre=99;
                                     p1.repaint();
                                 }
                                  else if(randno==1)
                                 {
                                     xivalue=xi[79];
                                     yivalue=yi[79];
                                     pre=79;
                                     p1.repaint();
                                 }
                                 
                             }
                             else if(pre==99) 
                             {
                                 if(randno>1)
                                 {
                                     xivalue=xi[99];
                                     yivalue=yi[99];
                                     pre=99;
                                     p1.repaint();
                                 }
                                 if(randno==1)
                             {
                                  xivalue=xi[100];
                                 yivalue=yi[100];
                                 pre=100;
                                 p1.repaint();
                                 creditupdate=true;
                                 JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                                 jButton1.setEnabled(false);
                             }
                         }
                             if(creditupdate==true)
                             {
                                 creditupdate=false;
                                 inc=true;
                              String nn=mainpage.user11;
                             dbconnect db=new dbconnect();
                             crval=crval+1;
                              String q1="Select * from credit_info";
                           
                           ResultSet rs1=db.getSelect(q1);
                 
                           
                                while(rs1.next())
                                {
                                    String user=rs1.getString("name");
                                    String crr=rs1.getString("credits");
                                   if(user.equals(nn))
                                   
                                           {
                                       users=true;
                                       break;
                                       
                                       
                                   }
                                   
                                }
                                if(users==true)
                                {
                                    String valuesss=String.valueOf(crval);
                                   String q="UPDATE gamebox.credit_info SET credits='"+valuesss+"' where name='"+nn+"'";
                                      checker=db.getInsert(q);
                            System.out.println(checker+ " ...   "+crval);
                                }
                             }
                         } catch (SQLException ex) {
                             Logger.getLogger(SAL_AI.class.getName()).log(Level.SEVERE, null, ex);
                         }
                   }
                 else
                 {
                 if(fsix==false)  
                {
                    if(randno!=6)
                    {
                    jLabel1.setText("p1 cannot start");
                    p1.repaint();
                     
                    }
                    else if (randno==6)
                 {
                     jLabel1.setText("p1 game started");
                     fsix=true;
                     xivalue=696;
                     yivalue=293;
                     sal_cpu_panel.imagecounter=1;
                     p1.repaint();
                       
                     
                 }
                }
               else if(fsix=true)
                {
                    jLabel1.setText("");
                    sal_cpu_panel.imagecounter=3;
                    xivalue=xi[pre+randno];
                    yivalue=yi[pre+randno];
                    pre=pre+randno;
                    p1.repaint();
                   if(pre==1||pre==4||pre==9||pre==21||pre==28||pre==51||pre==71||pre==80||pre==17||pre==54||pre==62||pre==64||pre==87||pre==93||pre==95||pre==98)
                   {
                       if(pre==1)
                       {
                            xivalue=xi[38];
                            yivalue=yi[38];
                            pre=38;
                            p1.repaint();
                       } 
                       else if(pre==4)
                       {
                            xivalue=xi[14];
                            yivalue=yi[14];
                            pre=14;
                            p1.repaint();
                       } 
                       else if(pre==9)
                       {
                            xivalue=xi[31];
                            yivalue=yi[31];
                            pre=31;
                            p1.repaint();
                       }
                       else if(pre==21)
                       {
                            xivalue=xi[42];
                            yivalue=yi[42];
                            pre=42;
                            p1.repaint();
                       }
                       else if(pre==28)
                       {
                            xivalue=xi[84];
                            yivalue=yi[84];
                            pre=84;
                            p1.repaint();
                       }
                       else if(pre==51)
                       {
                            xivalue=xi[67];
                            yivalue=yi[67];
                            pre=67;
                            p1.repaint();
                       }
                       else if(pre==71)
                       {
                            xivalue=xi[91];
                            yivalue=yi[91];
                            pre=91;
                            p1.repaint();
                       }
                       else if(pre==80)
                       {
                           xivalue=xi[100];
                           yivalue=yi[100];
                           pre=100;
                           p1.repaint();
                           creditupdate=true;
                           JOptionPane.showMessageDialog(rootPane,"player 1 wins the game","PLAYER 1 WINNER",JOptionPane.INFORMATION_MESSAGE);
                           jButton1.setEnabled(false);
                       }
                       
                       else if(pre==17)
                       {
                            xivalue=xi[7];
                            yivalue=yi[7];
                            pre=7;
                            p1.repaint();
                       } 
                       else if(pre==54)
                       {
                            xivalue=xi[34];
                            yivalue=yi[34];
                            pre=34;
                            p1.repaint();
                       } 
                       else if(pre==62)
                       {
                            xivalue=xi[19];
                            yivalue=yi[19];
                            pre=19;
                            p1.repaint();
                       }
                       else if(pre==64)
                       {
                            xivalue=xi[60];
                            yivalue=yi[60];
                            pre=60;
                            p1.repaint();
                       }
                       else if(pre==87)
                       {
                            xivalue=xi[24];
                            yivalue=yi[24];
                            pre=24;
                            p1.repaint();
                       }
                       else if(pre==93)
                       {
                            xivalue=xi[73];
                            yivalue=yi[73];
                            pre=73;
                            p1.repaint();
                       }
                       else if(pre==95)
                       {
                            xivalue=xi[75];
                            yivalue=yi[75];
                            pre=75;
                            p1.repaint();
                       }
                       else if(pre==98)
                       {
                            xivalue=xi[79];
                            yivalue=yi[79];
                            pre=79;
                            p1.repaint();
                       }
                       
                   }
                  
                        
                }
                 } 
                 if(creditupdate==true)
                 {
                     creditupdate=false;
                     inc=true;
                  String nn=mainpage.user11;
                             dbconnect db=new dbconnect();
                             crval=crval+1;
                              String q1="Select * from credit_info";
                          // System.out.println(crval);
                           ResultSet rs1=db.getSelect(q1);
                 
                           
                                while(rs1.next())
                                {
                                    String user=rs1.getString("name");
                                    String crr=rs1.getString("credits");
                                   if(user.equals(nn))
                                   
                                           {
                                       users=true;
                                       break;
                                       
                                       
                                   }
                                   
                                }
                                if(users==true)
                                {
                                    String valuesss=String.valueOf(crval);
                                    String q="UPDATE gamebox.credit_info SET credits='"+valuesss+"' where name='"+nn+"'";
                                      checker=db.getInsert(q);
                                      System.out.println(checker+ " ...   "+crval);
                            
                                }
                 }
            } catch (SQLException ex) {
                Logger.getLogger(SAL_AI.class.getName()).log(Level.SEVERE, null, ex);
            }
       
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
        
       // jLabel4.setText("");
        if(breaker1==true)
        {
            breaker1=false;
        }
        else
        {
        Randominteger rj=new Randominteger();
        randno1=rj.generaterandom();
        jTextField2.setText(String.valueOf(randno1));
        if(randno1==6&&fsix1==true)
        {
            jLabel4.setText("CPU gets a re-chance");
            flaggers=true;
            breaker=true;
        }
        if(pre1==80||pre1==94||pre1==96||pre1==97||pre1==99||pre1==100)
          {
              if(pre1==100)
              {
                  xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
              }
             else if(pre1==80)
              {
                  xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
                  creditreduce=true;
                  JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                  jButton1.setEnabled(false);
              }
              else if(pre1==94) 
              {
                    if(randno1==6)
                  {
                      xivalue1=xi[100];
                      yivalue1=yi[100];
                     pre1=100;
                     p1.repaint();
                     creditreduce=true;
                     JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                     jButton1.setEnabled(false);
                  }
                  else if(randno1==5)
                  {
                      xivalue1=xi[99];
                      yivalue1=yi[99];
                      pre1=99;
                      p1.repaint();
                  }
                  else if(randno1==4)
                  {
                      xivalue1=xi[79];
                      yivalue1=yi[79];
                      pre1=79;
                      p1.repaint();
                  }
                  else if(randno1==3)
                  {
                      xivalue1=xi[97];
                      yivalue1=yi[97];
                      pre1=97;
                      p1.repaint();
                  }
                  else if(randno1==2)
                  {
                      xivalue1=xi[96];
                      yivalue1=yi[96];
                      pre1=96;
                      p1.repaint();
                  }
                   else if(randno1==1)
                  {
                      xivalue1=xi[75];
                      yivalue1=yi[75];
                      pre1=75;
                      p1.repaint();
                  }
                  
                 }
              else if(pre1==96)
              {
                  if(randno1>4)
                  {
                      xivalue1=xi[96];
                      yivalue1=yi[96];
                      pre1=96;
                      p1.repaint();
                   }
                  else if(randno1==4)
                  {
                  xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
                  creditreduce=true;
                  JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                  jButton1.setEnabled(false);
                  }
                   else if(randno1==3)
                  {
                      xivalue1=xi[99];
                      yivalue1=yi[99];
                      pre1=99;
                      p1.repaint();
                  }
                  else if(randno1==2)
                  {
                      xivalue1=xi[79];
                      yivalue1=yi[79];
                      pre1=79;
                      p1.repaint();
                  }
                   else if(randno1==1)
                  {
                      xivalue1=xi[97];
                      yivalue1=yi[97];
                      pre1=97;
                      p1.repaint();
                  }
              }
              else if(pre1==97)
              {
                  
                  if(randno1>3)
              {      
                      xivalue1=xi[97];
                      yivalue1=yi[97];
                      pre1=97;
                      p1.repaint();
                   
              }
                  else if(randno1==3)
                  {
                      xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
                  creditreduce=true;
                  JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                  jButton1.setEnabled(false);
                  }
                  else if(randno1==2)
                  {
                      xivalue1=xi[99];
                      yivalue1=yi[99];
                      pre1=99;
                      p1.repaint();
                  }
                   else if(randno1==1)
                  {
                      xivalue1=xi[79];
                      yivalue1=yi[79];
                      pre1=79;
                      p1.repaint();
                  }
                  
              }
              else if(pre1==99) 
              {
                  if(randno1>1)
                  {
                      xivalue1=xi[99];
                      yivalue1=yi[99];
                      pre1=99;
                      p1.repaint();
                  }
                  if(randno1==1)
              {
                   xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
                  creditreduce=true;
                  JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                  jButton1.setEnabled(false);
              }
          }
               if(creditreduce==true)
                             {
                    try {
                        creditreduce=false;
                        dec=true;
                        String nn=mainpage.user11;
                       dbconnect db=new dbconnect();
                       crval=crval-1;
                        String q1="Select * from credit_info";
                     
                     ResultSet rs1=db.getSelect(q1);
           
                     
                          while(rs1.next())
                          {
                              String user=rs1.getString("name");
                              String crr=rs1.getString("credits");
                             if(user.equals(nn))
                             
                                     {
                                 users=true;
                                 break;
                                 
                                 
                             }
                             
                          }
                          if(users==true)
                          {
                              String valuesss=String.valueOf(crval);
                              String q="UPDATE gamebox.credit_info SET credits='"+valuesss+"' where name='"+nn+"'";
                                checker=db.getInsert(q);
                      System.out.println(checker+ " ...   "+crval);
                          }
                    } catch (SQLException ex) {
                        Logger.getLogger(SAL_AI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                             }
              
              
          }
        else
        {
        if(fsix1==false)  
       {
           if(randno1!=6)
           {
           jLabel2.setText("p2 cannot start");
           p1.repaint();
            
           }
           else if (randno1==6)
        {
            jLabel2.setText("p2 game started");
            fsix1=true;
            xivalue1=696;
            yivalue1=336;
            sal_cpu_panel.imagecounter=2;
            p1.repaint();
              
            
        }
       }
      else if(fsix1=true)
       {
           jLabel2.setText("");
           sal_cpu_panel.imagecounter=4;
           xivalue1=xi[pre1+randno1];
           yivalue1=yi[pre1+randno1];
           pre1=pre1+randno1;
           p1.repaint();
          if(pre1==1||pre1==4||pre1==9||pre1==21||pre1==28||pre1==51||pre1==71||pre1==80||pre1==17||pre1==54||pre1==62||pre1==64||pre1==87||pre1==93||pre1==95||pre1==98)
          {
              if(pre1==1)
              {
                   xivalue1=xi[38];
                   yivalue1=yi[38];
                   pre1=38;
                   p1.repaint();
              } 
              else if(pre1==4)
              {
                   xivalue1=xi[14];
                   yivalue1=yi[14];
                   pre1=14;
                   p1.repaint();
              } 
              else if(pre1==9)
              {
                   xivalue1=xi[31];
                   yivalue1=yi[31];
                   pre1=31;
                   p1.repaint();
              }
              else if(pre1==21)
              {
                   xivalue1=xi[42];
                   yivalue1=yi[42];
                   pre1=42;
                   p1.repaint();
              }
              else if(pre1==28)
              {
                   xivalue1=xi[84];
                   yivalue1=yi[84];
                   pre1=84;
                   p1.repaint();
              }
              else if(pre1==51)
              {
                   xivalue1=xi[67];
                   yivalue1=yi[67];
                   pre1=67;
                   p1.repaint();
              }
              else if(pre1==71)
              {
                   xivalue1=xi[91];
                   yivalue1=yi[91];
                   pre1=91;
                   p1.repaint();
              }
              else if(pre1==80)
              {
                  xivalue1=xi[100];
                  yivalue1=yi[100];
                  pre1=100;
                  p1.repaint();
                  creditreduce=true;
                  JOptionPane.showMessageDialog(rootPane,"CPU wins the game","CPU WINNER",JOptionPane.INFORMATION_MESSAGE);
                  jButton1.setEnabled(false);
              }
              
              else if(pre1==17)
              {
                   xivalue1=xi[7];
                   yivalue1=yi[7];
                   pre1=7;
                   p1.repaint();
              } 
              else if(pre1==54)
              {
                   xivalue1=xi[34];
                   yivalue1=yi[34];
                   pre1=34;
                   p1.repaint();
              } 
              else if(pre1==62)
              {
                   xivalue1=xi[19];
                   yivalue1=yi[19];
                   pre1=19;
                   p1.repaint();
              }
              else if(pre1==64)
              {
                   xivalue1=xi[60];
                   yivalue1=yi[60];
                   pre1=60;
                   p1.repaint();
              }
              else if(pre1==87)
              {
                   xivalue1=xi[24];
                   yivalue1=yi[24];
                   pre1=24;
                   p1.repaint();
              }
              else if(pre1==93)
              {
                   xivalue1=xi[73];
                   yivalue1=yi[73];
                   pre1=73;
                   p1.repaint();
              }
              else if(pre1==95)
              {
                   xivalue1=xi[75];
                   yivalue1=yi[75];
                   pre1=75;
                   p1.repaint();
              }
              else if(pre1==98)
              {
                   xivalue1=xi[79];
                   yivalue1=yi[79];
                   pre1=79;
                   p1.repaint();
              }
              
             }
           if(creditreduce==true)
                             {
                    try {
                        creditreduce=false;
                        dec=true;
                        String nn=mainpage.user11;
                       dbconnect db=new dbconnect();
                       crval=crval-1;
                        String q1="Select * from credit_info";
                     
                     ResultSet rs1=db.getSelect(q1);
           
                     
                          while(rs1.next())
                          {
                              String user=rs1.getString("name");
                              String crr=rs1.getString("credits");
                             if(user.equals(nn))
                             
                                     {
                                 users=true;
                                 break;
                                 
                                 
                             }
                             
                          }
                          if(users==true)
                          {
                              String valuesss=String.valueOf(crval);
                           String q="UPDATE gamebox.credit_info SET credits='"+valuesss+"' where name='"+nn+"'";
                                checker=db.getInsert(q);
                      System.out.println(checker+ " ...   "+crval);
                          }
                    } catch (SQLException ex) {
                        Logger.getLogger(SAL_AI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                             }
         
               
       }
        } 
        }
        
    }//GEN-LAST:event_jButton1MouseReleased

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
       int x123=evt.getX();
       int y123=evt.getY();
               System.out.println(x123  +","+ y123);
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      SALrules rule=new SALrules();
       rule.setSize(550,500);
       rule.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     randno=0;randno1=0;
     fsix=false;fsix1=false;
       pre=0;xivalue=696;yivalue=149;pre1=0; xivalue1=696;yivalue1=194;
       jTextField1.setText("");
       jTextField2.setText("");
       jLabel1.setText("");
       jLabel2.setText("");
       p1.repaint();
       creditupdate=false;creditreduce=false;users=false;
       //flagger=false;
       //crval=0;
//       if(inc==true)
//       {
//           increment=increment+1;
//       }
//       if(dec==true)
//       {
//           decrement=decrement+1;
//       }
       //jButton1.setEnabled(true);
       jLabel4.setText("player 1 turn");
       inc=false;dec=false;
       jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SAL_AI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SAL_AI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SAL_AI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SAL_AI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SAL_AI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
